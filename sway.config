# some global theme specific variables
# From catppuccin color scheme
set $rosewater #f5e0dc
set $flamingo  #f2cdcd
set $pink      #f5c2e7
set $mauve     #cba6f7
set $red       #f38ba8
set $maroon    #eba0ac
set $peach     #fab387
set $green     #a6e3a1
set $teal      #94e2d5
set $sky       #89dceb
set $sapphire  #74c7ec
set $blue      #89b4fa
set $lavender  #b4befe
set $text      #cdd6f4
set $subtext1  #bac2de
set $subtext0  #a6adc8
set $overlay2  #9399b2
set $overlay1  #7f849c
set $overlay0  #6c7086
set $surface2  #585b70
set $surface1  #45475a
set $surface0  #313244
set $base      #1e1e2e
set $mantle    #181825
set $crust     #11111b
set $yellow    #f9e2af

# target                 title     bg    text      indicator  border
client.focused           $flamingo $base $flamingo $peach    $flamingo
client.focused_inactive  $flamingo $base $flamingo $surface0 $surface0
client.unfocused         $overlay2 $base $subtext0 $surface0 $surface0
client.urgent            $red      $base $flamingo $surface0 $red
client.placeholder       $overlay0 $base $text     $surface0 $surface0
client.background        $base

### Variables
#
# Logo key. Use Mod1 for Alt and Mod4 for Super.
set $mod Mod4
set $alt_mod Mod1

# Add --to-code to bindsym, support for non-latin layouts
set $bindsym bindsym --to-code

# Socket used by the wob binary which is used to show volume and birghtnes bar.
set $WOBSOCK $XDG_RUNTIME_DIR/wob.sock

set $brightness_up light -A 5 && light -G | cut -d'.' -f1 > $WOBSOCK
set $brightness_down light -U 5 && light -G | cut -d'.' -f1 > $WOBSOCK

# audio control
set $source_volume pactl get-sink-volume @DEFAULT_SINK@ | head -n 1 | awk '{print substr($5, 1, length($5)-1)}'
set $volume_down pactl set-sink-volume @DEFAULT_SINK@ -5% && $source_volume > $WOBSOCK
set $volume_up pactl set-sink-volume @DEFAULT_SINK@ +5% && $source_volume > $WOBSOCK
set $volume_mute pactl set-sink-mute @DEFAULT_SINK@ toggle && pactl get-sink-mute @DEFAULT_SINK@ | head -n 1 | sed -En "/no/ s/.*/$($source_volume)/p; /yes/ s/.*/0/p" > $WOBSOCK

### Idle configuration
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
#
set $idle_timeout 300
set $locking_timeout 600
set $screen_timeout 620
set $sleep_timeout 1200
set $sleep_delay 2

set $swayidle swayidle -w \
    timeout $idle_timeout 'light -G > /tmp/brightness && light -S 10' resume 'light -S $([ -f /tmp/brightness ] && cat /tmp/brightness || echo 100%)' \
    timeout $locking_timeout 'loginctl lock-session' \
    timeout $screen_timeout 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
    timeout $sleep_timeout 'swaymsg "output * dpms on"; sleep $sleep_delay; systemctl suspend' \
    before-sleep 'playerctl pause; sleep $sleep_delay; loginctl lock-session' \
    lock 'exec swaylock -f'

# workspace names
set $ws1 number 1
set $ws2 number 2
set $ws3 number 3
set $ws4 number 4
set $ws5 number 5
set $ws6 number 6
set $ws7 number 7
set $ws8 number 8
set $ws9 number 9
set $ws10 number 10

# autstarts
set $wlsunset /usr/share/sway/scripts/sunset.sh "on"

### Key bindings
#
# Basics:
#
## Launch // Terminal ##
$bindsym $mod+Shift+Return exec wezterm

## Action // Kill focused window ##
$bindsym $mod+Shift+c kill

## Action // Reload Sway Configuration ##
$bindsym $mod+q reload

## Action // Exit Sway
$bindsym $mod+Shift+q exit

## Launch // Open launcher ##
$bindsym $mod+p exec rofi -no-lazy-grab -show drun -modi drun
$bindsym $mod+Shift+p exec powermenu.sh
$bindsym $alt_mod+l exec loginctl lock-session

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

## Action // Toggle Waybar ##
$bindsym $mod+Shift+b exec pkill -SIGUSR1 waybar

# --locked flags allow the buttons to be used whilst the screen is locked.
$bindsym --locked XF86AudioRaiseVolume exec $volume_up

$bindsym --locked XF86AudioLowerVolume exec $volume_down

$bindsym --locked XF86AudioMute exec $volume_mute

$bindsym --locked XF86MonBrightnessUp exec $brightness_up

$bindsym --locked XF86MonBrightnessDown exec $brightness_down

$bindsym --locked XF86AudioPlay exec playerctl play-pause

$bindsym XF86AudioNext exec playerctl next

$bindsym XF86AudioPrev exec playerctl previous

$bindsym XF86PowerOff exec $shutdown

$bindsym XF86TouchpadToggle input type:touchpad events toggle enabled disabled

# Moving around:
#
# Move your focus around
$bindsym $mod+h focus left
$bindsym $mod+j focus down
$bindsym $mod+k focus up
$bindsym $mod+l focus right

## Navigation // Move focused window
$bindsym $mod+Shift+h move left
$bindsym $mod+Shift+j move down
$bindsym $mod+Shift+k move up
$bindsym $mod+Shift+l move right

## Navigation // Move focused workspace
$bindsym $mod+Alt+l move workspace to output right
$bindsym $mod+Alt+h move workspace to output left
$bindsym $mod+Alt+j move workspace to output down
$bindsym $mod+Alt+k move workspace to output up

## Navigation // Switch to the last recently used workspace ##
$bindsym $mod+Tab workspace back_and_forth

#
# Workspaces:
#
## Navigation // Switch workspace // $mod + [number] ##
$bindsym $mod+1 workspace $ws1
$bindsym $mod+2 workspace $ws2
$bindsym $mod+3 workspace $ws3
$bindsym $mod+4 workspace $ws4
$bindsym $mod+5 workspace $ws5
$bindsym $mod+6 workspace $ws6
$bindsym $mod+7 workspace $ws7
$bindsym $mod+8 workspace $ws8
$bindsym $mod+9 workspace $ws9
$bindsym $mod+0 workspace $ws10

set $focus_ws [ $focus_after_move == 'true' ] && swaymsg workspace

## Action // Move focused window to workspace // $mod + Shift + [number] ##
$bindsym $mod+Shift+1 move container to workspace $ws1, exec $focus_ws $ws1
$bindsym $mod+Shift+2 move container to workspace $ws2, exec $focus_ws $ws2
$bindsym $mod+Shift+3 move container to workspace $ws3, exec $focus_ws $ws3
$bindsym $mod+Shift+4 move container to workspace $ws4, exec $focus_ws $ws4
$bindsym $mod+Shift+5 move container to workspace $ws5, exec $focus_ws $ws5
$bindsym $mod+Shift+6 move container to workspace $ws6, exec $focus_ws $ws6
$bindsym $mod+Shift+7 move container to workspace $ws7, exec $focus_ws $ws7
$bindsym $mod+Shift+8 move container to workspace $ws8, exec $focus_ws $ws8
$bindsym $mod+Shift+9 move container to workspace $ws9, exec $focus_ws $ws9
$bindsym $mod+Shift+0 move container to workspace $ws10, exec $focus_ws $ws10

## Navigation // Switch to a new workspace ##
$bindsym $mod+n exec /usr/share/sway/scripts/first-empty-workspace.py --switch

## Action // Move focused window to a new workspace ##
$bindsym $mod+Shift+n exec /usr/share/sway/scripts/first-empty-workspace.py --move

## Action // Move focused window to a new workspace and switch there ##
$bindsym $mod+Shift+m exec /usr/share/sway/scripts/first-empty-workspace.py --move --switch

#
# Layout stuff:
#
## Setting // Split windows horizontally ##
$bindsym $mod+b splith
## Setting // Split windows vertically ##
$bindsym $mod+v splitv

## Action // Switch to window stacking ##
$bindsym $mod+s layout stacking
## Action // Switch to window tabbing ##
$bindsym $mod+w layout tabbed
## Action // Toggle window splitting ##
$bindsym $mod+e layout toggle split

## Action // Toggle fullscreen ##
$bindsym $mod+f fullscreen

## Action // Toggle global fullscreen ##
$bindsym $mod+Shift+f fullscreen global

## Action // Toggle floating ##
$bindsym $mod+Shift+space floating toggle

## Navigation // Toggle focus between tiling and floating ##
$bindsym $mod+space focus mode_toggle

## Navigation // Swap focus to the parent window ##
$bindsym $mod+a focus parent

default_border pixel 1
hide_edge_borders smart

set $mode_resize "<span foreground='$pink'>󰉸</span>  \
<span foreground='$pink'><b>Resize</b></span> <span foreground='$pink'>(<b>↑ ↓ ← →</b>)</span>"

mode --pango_markup $mode_resize {
    $bindsym h resize shrink width 10px
    $bindsym j resize grow height 10px
    $bindsym k resize shrink height 10px
    $bindsym l resize grow width 10px

    $bindsym Shift+h resize shrink width 50px
    $bindsym Shift+j resize grow height 50px
    $bindsym Shift+k resize shrink height 50px
    $bindsym Shift+l resize grow width 50px

    # Return to default mode
    $bindsym Return mode "default"
    $bindsym Escape mode "default"
}
## Launch // Resize Mode ##
$bindsym $mod+r mode $mode_resize

gaps inner 0px
gaps outer 0px

## Launch // Screenshot Mode ##
$bindsym Print exec screenshot.sh


# systemd setup
exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP
exec hash dbus-update-activation-environment 2>/dev/null && \
     dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP

# setup theme
exec_always {
  gsettings set org.gnome.desktop.interface monospace-font-name "JetBrainsMono Nerd Font 14"
  gsettings set org.gnome.desktop.input-sources show-all-sources true
  gsettings set org.gnome.desktop.interface font-name "Roboto 11"
  gsettings set org.gnome.desktop.interface icon-theme "Papirus-Dark"
  gsettings set org.gnome.desktop.interface gtk-theme "Catppuccin-Mocha-Standard-Flamingo-dark"
  gsettings set org.gnome.desktop.interface color-scheme "prefer-dark"
  gsettings set org.gnome.desktop.interface cursor-theme "Catppuccin-Mocha-Flamingo-Cursors"

  kvantummanager --set "Catppuccin-Mocha-Flamingo"
}

bar {
    id default
    swaybar_command /usr/share/sway/scripts/waybar.sh
    position top
}

# set floating mode for generated windows
for_window [title="(?:Open|Save) (?:File|Folder|As)"] floating enable;
for_window [title="(?:Open|Save) (?:File|Folder|As)"] resize set 800 600
for_window [window_role="pop-up"] floating enable
for_window [window_role="bubble"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [window_role="Preferences"] floating enable
for_window [window_type="dialog"] floating enable
for_window [window_type="menu"] floating enable

# set floating mode for specific applications
for_window [instance="lxappearance"] floating enable
for_window [app_id="pamac-manager"] floating enable
for_window [app_id="blueberry.py"] floating enable
for_window [app_id="dragon-drop"] floating enable, sticky enable
for_window [app_id="firefox" title="^Library$"] floating enable, border pixel 1, sticky enable
for_window [app_id="thunderbird" title=".*Reminder"] floating enable
for_window [app_id="floating_shell"] floating enable, border pixel 1, sticky enable
for_window [app_id="Manjaro.manjaro-settings-manager"] floating enable
for_window [app_id="" title="Picture in picture"] floating enable, sticky enable
for_window [app_id="" title="Picture-in-Picture"] floating enable, sticky enable
for_window [instance="around"] floating enable, sticky enable
for_window [app_id="xsensors"] floating enable
for_window [title="Save File"] floating enable
for_window [title="Firefox .*— Sharing Indicator"] floating enable, sticky enable, move to scratchpad
for_window [app_id="" title=".* is sharing your screen."] floating enable
for_window [title="^wlay$"] floating enable

# inhibit idle
for_window [app_id="microsoft teams - preview"] inhibit_idle fullscreen
for_window [app_id="google-chrome"] inhibit_idle fullscreen
for_window [app_id="google-chrome-beta"] inhibit_idle fullscreen
for_window [app_id="google-chrome-unstable"] inhibit_idle fullscreen

# Don't allow applications to inhibit shortcuts, i.e. grab total control of the
# keyboard. Chrome currently abuses this by enabling it for all "--app=..."
# shortcuts.
seat * shortcuts_inhibitor disable

# autostart background applications
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# autostarts
exec {
    $swayidle
    mako
    /usr/share/sway/scripts/screenshot-notify.sh
    $autostart_dex
    $wlsunset
    autotiling-rs
    $workspace_icons
    pcmanfm -d
    background.sh
    dropbox
    nm-applet
}

exec_always {
    pkill poweralertd; poweralertd -s -i "line power" &
}

### Input configuration
input type:keyboard xkb_layout "us,cz"

input type:touchpad {
    accel_profile flat
    click_method button_areas
    natural_scroll disabled
    scroll_method two_finger
    tap enabled
}

input type:mouse {
    accel_profile flat
}

input type:pointer {
    accel_profile flat
}

include ~/.config/sway/config.d/outputs.config
